[2023-11-04 17:00:20,698] INFO [Controller id=0] New topics: [Set(destinos_a_drones_topic, __consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(destinos_a_drones_topic,Some(HyYl3oReQUCE9DC97OTRFA),Map(destinos_a_drones_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(__consumer_offsets,Some(HYkSZ6CTSaW2-s_gwzxr7g),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-04 17:00:20,703] INFO [Controller id=0] New partition creation callback for __consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,destinos_a_drones_topic-0,__consumer_offsets-22,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-11-04 17:04:31,671] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:04:31,671] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:04:31,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:04:31,675] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:04:58,329] DEBUG [Controller id=0] Delete topics listener fired for topics destinos_a_drones_topic to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:04:58,329] INFO [Controller id=0] Starting topic deletion for topics destinos_a_drones_topic (kafka.controller.KafkaController)
[2023-11-04 17:04:58,337] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:04:58,340] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-04 17:04:58,447] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(destinos_a_drones_topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-04 17:04:58,449] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=destinos_a_drones_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-04 17:04:58,450] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:04:58,531] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-04 17:04:58,534] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-04 17:04:58,537] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:04:59,380] INFO [Controller id=0] New topics: [Set(destinos_a_drones_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(destinos_a_drones_topic,Some(IyqlZenwQFabnNFwzAMwSg),Map(destinos_a_drones_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-04 17:04:59,380] INFO [Controller id=0] New partition creation callback for destinos_a_drones_topic-0 (kafka.controller.KafkaController)
[2023-11-04 17:09:31,676] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:09:31,676] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:09:31,678] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:09:31,678] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:14:31,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:14:31,680] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:14:31,682] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:14:31,682] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:19:31,683] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:19:31,683] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:19:31,684] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:19:31,684] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:24:31,686] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:24:31,687] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:24:31,688] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:24:31,688] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:29:31,690] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:29:31,690] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:29:31,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:29:31,692] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:34:31,694] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:34:31,695] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:34:31,697] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:34:31,697] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:39:31,699] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:39:31,699] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:39:31,700] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:39:31,700] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:44:31,701] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:44:31,702] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:44:31,702] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:44:31,702] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:47:35,886] DEBUG [Controller id=0] Delete topics listener fired for topics destinos_a_drones_topic to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:47:35,886] INFO [Controller id=0] Starting topic deletion for topics destinos_a_drones_topic (kafka.controller.KafkaController)
[2023-11-04 17:47:35,886] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:47:35,886] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-04 17:47:35,900] INFO [RequestSendThread controllerId=0] Controller 0 connected to tooez:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-11-04 17:47:35,970] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(destinos_a_drones_topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-04 17:47:35,970] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=destinos_a_drones_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-04 17:47:35,972] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:47:36,020] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-04 17:47:36,023] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-04 17:47:36,025] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:47:36,248] INFO [Controller id=0] New topics: [Set(destinos_a_drones_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(destinos_a_drones_topic,Some(DKyPWTtYRtytfE4vKrp8QA),Map(destinos_a_drones_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-04 17:47:36,248] INFO [Controller id=0] New partition creation callback for destinos_a_drones_topic-0 (kafka.controller.KafkaController)
[2023-11-04 17:48:24,302] DEBUG [Controller id=0] Delete topics listener fired for topics destinos_a_drones_topic to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:48:24,303] INFO [Controller id=0] Starting topic deletion for topics destinos_a_drones_topic (kafka.controller.KafkaController)
[2023-11-04 17:48:24,303] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:48:24,303] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-04 17:48:24,416] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(destinos_a_drones_topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-04 17:48:24,417] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=destinos_a_drones_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-04 17:48:24,417] INFO [Topic Deletion Manager 0] Handling deletion for topics destinos_a_drones_topic (kafka.controller.TopicDeletionManager)
[2023-11-04 17:48:24,466] INFO [Topic Deletion Manager 0] Deletion of topic destinos_a_drones_topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-04 17:48:24,468] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-04 17:48:24,474] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-04 17:48:24,766] INFO [Controller id=0] New topics: [Set(destinos_a_drones_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(destinos_a_drones_topic,Some(Azkk0XnATvWww111C6Movw),Map(destinos_a_drones_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-04 17:48:24,766] INFO [Controller id=0] New partition creation callback for destinos_a_drones_topic-0 (kafka.controller.KafkaController)
[2023-11-04 17:49:31,704] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:49:31,704] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:49:31,705] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:49:31,705] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:54:31,706] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:54:31,706] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:54:31,707] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:54:31,707] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-04 17:59:31,709] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-04 17:59:31,709] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-04 17:59:31,709] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-04 17:59:31,709] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
